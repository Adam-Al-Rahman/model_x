module(name = "model_x")

# Add Bazel Central Registry Dependencies
bazel_dep(name = "platforms", version = "1.0.0")
bazel_dep(name = "rules_cc", version = "0.2.2")
bazel_dep(name = "bazel_skylib", version = "1.8.1")

bazel_dep(name = "googletest", version = "1.17.0")
bazel_dep(name = "abseil-cpp", version = "20250814.0")
bazel_dep(name = "re2", version = "2025-08-12")
bazel_dep(name = "rules_python", version = "1.6.3")

# Add Third Party Dependencies
bazel_dep(name = "rules_cuda")
git_override(
    module_name = "rules_cuda",
    remote = "https://github.com/bazel-contrib/rules_cuda.git",
    commit = "a862f9b1cb7b6cf15c775fd31e4a1cf56f148a82",
)

cuda = use_extension("@rules_cuda//cuda:extensions.bzl", "toolchain")
cuda.toolkit(name = "cuda",toolkit_path = "")
use_repo(cuda, "cuda")

libtorch_extension = use_extension("//third_party/libtorch:workspace.bzl", "libtorch_configure_extension")
libtorch_extension.configure(version = "2.8.0")
use_repo(libtorch_extension, "libtorch")

# matplot_pp_extention = use_extension("//third_party/matplotplusplus:workspace.bzl", "matplot_pp_extention")
# use_repo(matplot_pp_extention, "matplot_pp")

# Python setup
python = use_extension("@rules_python//python/extensions:python.bzl", "python")
python.toolchain(python_version = "3.13", is_default=True)

pip = use_extension("@rules_python//python/extensions:pip.bzl", "pip")
pip.parse(hub_name = "pypi", download_only = True, python_version = "3.13", requirements_lock = "//src/py_modules:requirements_lock.txt",)
use_repo(pip, "pypi")

bazel_dep(name = "tensorboard_logger")
git_override(
    module_name = "tensorboard_logger",
    commit = "f706838d41a19f328d89a1b2c7fdd92545894016",
    remote = "https://github.com/cemlyn007/tensorboard_logger.git",
)

bazel_dep(name = "hedron_compile_commands", dev_dependency = True)
git_override(
    module_name = "hedron_compile_commands",
    remote = "https://github.com/hedronvision/bazel-compile-commands-extractor.git",
    commit = "abb61a688167623088f8768cc9264798df6a9d10",
)
